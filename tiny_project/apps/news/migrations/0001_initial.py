# Generated by Django 4.2.9 on 2024-01-28 11:07

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uncms.media.fields
import uncms.models.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("media", "0012_alter_file_options"),
        ("pages", "0012_remove_page_twitter_card_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="NewsFeed",
            fields=[
                (
                    "page",
                    models.OneToOneField(
                        editable=False,
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        related_name="+",
                        serialize=False,
                        to="pages.page",
                    ),
                ),
                (
                    "per_page",
                    models.IntegerField(default=12, verbose_name="Articles per page"),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Article",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "is_online",
                    models.BooleanField(
                        default=True,
                        help_text="Uncheck this box to remove the page from the public website. Logged-in admin users will still be able to view this page by clicking the 'view on site' button.",
                        verbose_name="online",
                    ),
                ),
                (
                    "browser_title",
                    models.CharField(
                        blank=True,
                        help_text="The heading to use in the user's web browser. Leave blank to use the page title. Search engines pay particular attention to this attribute.",
                        max_length=1000,
                    ),
                ),
                (
                    "meta_description",
                    models.TextField(
                        blank=True,
                        help_text="A brief description of the contents of this page.",
                        verbose_name="description",
                    ),
                ),
                (
                    "sitemap_priority",
                    models.FloatField(
                        blank=True,
                        choices=[
                            (1.0, "Very high"),
                            (0.8, "High"),
                            (0.5, "Medium"),
                            (0.3, "Low"),
                            (0.0, "Very low"),
                        ],
                        default=None,
                        help_text="The relative importance of this content on your site. Search engines use this as a hint when ranking the pages within your site.",
                        null=True,
                        verbose_name="priority",
                    ),
                ),
                (
                    "sitemap_changefreq",
                    models.IntegerField(
                        blank=True,
                        choices=[
                            (1, "Always"),
                            (2, "Hourly"),
                            (3, "Daily"),
                            (4, "Weekly"),
                            (5, "Monthly"),
                            (6, "Yearly"),
                            (7, "Never"),
                        ],
                        default=None,
                        help_text="How frequently you expect this content to be updated. Search engines use this as a hint when scanning your site for updates.",
                        null=True,
                        verbose_name="change frequency",
                    ),
                ),
                (
                    "robots_index",
                    models.BooleanField(
                        default=True,
                        help_text="Uncheck to prevent search engines from indexing this page. Do this only if the page contains information which you do not wish to show up in search results.",
                        verbose_name="allow indexing",
                    ),
                ),
                (
                    "robots_follow",
                    models.BooleanField(
                        default=True,
                        help_text="Uncheck to prevent search engines from following any links they find in this page. Do this only if the page contains links to other sites that you do not wish to publicise.",
                        verbose_name="follow links",
                    ),
                ),
                (
                    "robots_archive",
                    models.BooleanField(
                        default=True,
                        help_text="Uncheck this to prevent search engines from archiving this page. Do this this only if the page is likely to change on a very regular basis. ",
                        verbose_name="allow archiving",
                    ),
                ),
                (
                    "og_title",
                    models.CharField(
                        blank=True,
                        help_text="Title that will appear on social media posts. This is limited to 100 characters, but Facebook will truncate the title to 88 characters.",
                        max_length=100,
                        verbose_name="title",
                    ),
                ),
                (
                    "og_description",
                    models.TextField(
                        blank=True,
                        help_text="Description that will appear on social media posts. It is limited to 300 characters, but it is recommended that you do not use anything over 200.",
                        max_length=300,
                        verbose_name="description",
                    ),
                ),
                (
                    "slug",
                    models.SlugField(
                        help_text="A unique portion of the URL that is used to identify this specific page using human-readable keywords (e.g., about-us)",
                        max_length=150,
                    ),
                ),
                ("title", models.CharField(max_length=1000)),
                ("content", uncms.models.fields.HtmlField()),
                ("date", models.DateTimeField(default=django.utils.timezone.now)),
                ("summary", models.TextField(blank=True)),
                (
                    "image",
                    uncms.media.fields.ImageRefField(
                        blank=True,
                        limit_choices_to={
                            "file__iregex": "\\.(gif|png|jpg|jpeg|webp)$"
                        },
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="+",
                        to="media.file",
                    ),
                ),
                (
                    "og_image",
                    uncms.media.fields.ImageRefField(
                        blank=True,
                        help_text="The recommended image size is 1200x627 (1.91:1 ratio); this gives you a big stand out thumbnail. Using an image smaller than 400x209 will give you a small thumbnail and will splits posts into 2 columns. If you have text on the image make sure it is centered.",
                        limit_choices_to={
                            "file__iregex": "\\.(gif|png|jpg|jpeg|webp)$"
                        },
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="+",
                        to="media.file",
                        verbose_name="image",
                    ),
                ),
                (
                    "page",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="news.newsfeed",
                        verbose_name="News feed",
                    ),
                ),
            ],
            options={
                "ordering": ["-date"],
                "unique_together": {("page", "slug")},
            },
        ),
    ]
